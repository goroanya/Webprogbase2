<!doctype html>
<html lang="en">

<head>

    {{>head}}
    <title>KEEP THE MOMENT</title>
    <meta name="description" content="REST API Documentation">

    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm"
        crossorigin="anonymous">

</head>

<body style="width: 100%; height:100%; background-color: #333;">
    {{>menu}}

    <div class="container" >
        <div class="developer text-white">
            <div class="devText mt-6" >
                <h1><br><br>Keep the moment REST API v1 Documentation</h1>
                <h3><b>Requests</b></h3>
                <p>
                    You are able to make GET, POST, PUT and DELETE requests to get, create new, update
                    and delete entity.
                </p>

                <h3><b>Errors</b></h3>
                <p>
                    If some error occured returns JSON-object with field <code>message</code> with
                    information about error in it.
                </p>
            </div>
            <hr color="white">
            <table class="table table-dark ">
                <h1 class="text-center">Users</h1>
                <thead class="thead-light">
                    <tr style="text-align: center; font-size: 17px">
                        <th scope="col">URL</th>
                        <th scope="col">METHOD</th>
                        <th scope="col">ACCESSIBLE FOR</th>
                        <th scope="col">QUERY</th>
                        <th scope="col">BODY</th>
                        <th scope="col">RETURNS</th>

                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>/users</td>
                        <td>GET</td>
                        <td>Admin, Simple User</td>
                        <td>page - number of page to be displayed (default = 1)<br>offset - number of users to be
                            displayed
                            on the page (default = 5)</td>
                        <td>-</td>
                        <td>List of all users</td>
                    </tr>
                    <tr>
                        <td>/users/me</td>
                        <td>GET</td>
                        <td>Admin, Simple User </td>
                        <td>-</td>
                        <td>-</td>
                        <td>Information about logged user </td>
                    </tr>
                    <tr>
                        <td>/users/:login</td>
                        <td>GET</td>
                        <td>Admin, Simple User</td>
                        <td>-</td>
                        <td>-</td>
                        <td>User with specified login<br>If user is not found - returns message about it</td>
                    </tr>
                    <tr>
                        <td>/users/:login</td>
                        <td>DELETE</td>
                        <td>Admin, Simple User(owner)</td>
                        <td>-</td>
                        <td>-</td>
                        <td> Deleted user with specified login<br>If user is not found - returns message about it</td>
                    </tr>
                    <tr>
                        <td>/users/:login</td>
                        <td>PUT</td>
                        <td>Simple User(owner)</td>
                        <td>-</td>
                        <td> fullname, role, avaUrl, password , bio</td>
                        <td> Updated user with specified login<br>If user is not found - returns message about it</td>
                    </tr>

                </tbody>
            </table>
        </div>

        <hr color="white">
        <table class="table table-dark">
            <h1 class="text-center text-white">Albums</h1>

            <thead class="thead-light">
                <tr style="text-align: center; font-size: 17px">
                    <th scope="col">URL</th>
                    <th scope="col">METHOD</th>
                    <th scope="col">ACCESSIBLE FOR</th>
                    <th scope="col">QUERY</th>
                    <th scope="col">BODY</th>
                    <th scope="col">RETURNS</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>/albums</td>
                    <td>GET</td>
                    <td>Admin , Simple User</td>
                    <td>page - number of page to be displayed (default = 1)<br>offset - number of albums to be
                        displayed
                        on the page (default = 10)<br>owner - whose albums will be taken</td>
                    <td>-</td>
                    <td>If Admin - returns ALL created albums<br>If Simple User - return all albums of this
                        user
                    </td>
                </tr>
                <tr>
                    <td>/albums</td>
                    <td>POST</td>
                    <td>Admin, Simple User </td>
                    <td>-</td>
                    <td>required field : name <br> coverUrl - cover picture url for album</td>
                    <td>Created album <br> If not created - returns message about it </td>
                </tr>
                <tr>
                    <td>/albums/:id</td>
                    <td>GET</td>
                    <td>Admin, Simple User</td>
                    <td>-</td>
                    <td>-</td>
                    <td>Album with specified id<br>If album is not found - returns message about it</td>
                </tr>
                <tr>
                    <td>/albums/:id</td>
                    <td>DELETE</td>
                    <td>Admin, Simple User( author )</td>
                    <td>-</td>
                    <td>-</td>
                    <td> Deleted album with specified id<br>If album is not found - returns message about it</td>
                </tr>
                <tr>
                    <td>/albums/:id</td>
                    <td>PUT</td>
                    <td>Simple User( author )</td>
                    <td>-</td>
                    <td> id - ObjectId of album</td>
                    <td> Updated album with specified id<br>If album is not found - returns message about it</td>
                </tr>

            </tbody>
        </table>
        <hr color="white">

        <table class="table table-dark ">
            <h1 class="text-center text-white">Photos</h1>
            <thead class="thead-light">
                <tr style="text-align: center; font-size: 17px">
                    <th scope="col">URL</th>
                    <th scope="col">METHOD</th>
                    <th scope="col">ACCESSIBLE FOR</th>
                    <th scope="col">QUERY</th>
                    <th scope="col">BODY</th>
                    <th scope="col">RETURNS</th>
                    <th scope="col">NOTE</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>/photos</td>
                    <td>GET</td>
                    <td>Admin , Simple User</td>
                    <td>page - number of page to be displayed (default = 1)<br>offset - number of photos to be
                        displayed
                        on the page (default = 10)<br> filter - for search<br>albumId - photos of album with its id<br>owner- whose photos will be taken</td>
                    <td> - </td>
                    <td>returns pagineted active photos in order to query params
                    </td>
                    <td> - </td>
                </tr>
                <tr>
                    <td>/photos</td>
                    <td>POST</td>
                    <td>Admin, Simple User </td>
                    <td> - </td>
                    <td>required field : name, url <br> not required fields : description, album
                    </td>
                    <td>Created photo( author - logged user ) <br> If not created - returns message about it
                    </td>
                    <td> Admin can add photo only to his own albums </td>
                </tr>
                <tr>
                    <td>/photos/:id</td>
                    <td>GET</td>
                    <td>Admin, Simple User</td>
                    <td> - </td>
                    <td>-</td>
                    <td>Photo with specified id<br>If photo is not found - returns message about it</td>
                    <td> - </td>
                </tr>
                <tr>
                    <td>/photos/:id</td>
                    <td>DELETE</td>
                    <td>Admin, Simple User( author )</td>
                    <td>-</td>
                    <td> - </td>
                    <td> Deleted photo with specified id<br>If photo is not found - returns message about it</td>
                    <td> - </td>
                </tr>
                <tr>
                    <td>/photos/:id</td>
                    <td>PUT</td>
                    <td>Admin, Simple User( author )</td>
                    <td> - </td>
                    <td> name, description</td>
                    <td> Updated photo with specified id<br>If photo is not found - returns message about it</td>
                    <td> Admin can update only his own photos </td>
                </tr>

            </tbody>
        </table>

    </div>
    {{>footer}}

</body>

</html>